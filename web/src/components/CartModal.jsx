import { useCart } from "./CartContext";
import { useNavigate } from "react-router-dom";
import Swal from "sweetalert2";
import "sweetalert2/dist/sweetalert2.min.css";

export default function CartModal({ open, onClose, user }) {
  // B·ªè h√†m checkout kh·ªèi ƒë√¢y v√¨ n√≥ ƒë√£ b·ªã x√≥a kh·ªèi Context
  const { cart, removeFromCart, updateQty } = useCart();
  const navigate = useNavigate();

  if (!open) return null;

  const total = cart.reduce(
    (sum, item) => sum + (Number(item.gia) || 0) * item.so_luong,
    0
  );

  // H√†m x·ª≠ l√Ω khi b·∫•m n√∫t "ƒê·∫øn Thanh to√°n"
  const handleGoToCheckout = () => {
    // Ki·ªÉm tra gi·ªè h√†ng c√≥ tr·ªëng kh√¥ng
    if (cart.length === 0) {
      Swal.fire({
        icon: 'warning',
        title: 'Gi·ªè h√†ng tr·ªëng!',
        text: 'Vui l√≤ng th√™m s·∫£n ph·∫©m v√†o gi·ªè tr∆∞·ªõc khi thanh to√°n.',
        confirmButtonColor: "#b91c1c", // M√†u ƒë·ªè c·ªßa Highlands
      });
      return; // D·ª´ng l·∫°i n·∫øu gi·ªè h√†ng tr·ªëng
    }

    // ƒê√≥ng modal gi·ªè h√†ng
    onClose();
    // Chuy·ªÉn h∆∞·ªõng ng∆∞·ªùi d√πng ƒë·∫øn trang checkout
    navigate("/checkout");
  };

  return (
    <div className="fixed inset-0 bg-black/40 flex items-center justify-center z-50 p-4"> {/* Th√™m padding */}
      <div className="bg-white w-full max-w-lg rounded-2xl p-6 shadow-xl relative max-h-[90vh] flex flex-col"> {/* Gi·ªõi h·∫°n chi·ªÅu cao */}
        {/* Header */}
        <div className="flex justify-between items-center mb-4 pb-4 border-b"> {/* Th√™m border */}
          <h2 className="text-xl font-semibold text-gray-800">üõí Gi·ªè h√†ng c·ªßa b·∫°n</h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 p-1 rounded-full hover:bg-gray-100"
          >
             {/* Icon ƒë√≥ng ƒë·∫πp h∆°n */}
             <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
             </svg>
          </button>
        </div>

        {/* N·ªôi dung gi·ªè h√†ng */}
        {cart.length === 0 ? (
          <div className="flex-1 flex flex-col items-center justify-center text-center py-12">
             <div className="text-6xl mb-4">üõçÔ∏è</div>
             <p className="text-neutral-500 font-medium">Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng.</p>
             <button
                onClick={onClose}
                className="mt-4 px-4 py-2 text-sm bg-red-700 text-white rounded-full hover:bg-red-800"
             >
                Ti·∫øp t·ª•c mua s·∫Øm
             </button>
          </div>
        ) : (
          <>
            {/* Danh s√°ch s·∫£n ph·∫©m */}
            <div className="flex-1 overflow-y-auto pr-2 mb-4"> {/* Cho ph√©p cu·ªôn v√† th√™m padding */}
                <ul className="divide-y divide-gray-100">
                {cart.map((item) => (
                    <li key={item.id_mon || item._id} className="flex items-center justify-between py-4">
                    {/* ·∫¢nh s·∫£n ph·∫©m */}
                    <img
                        src={item.anh || item.imageUrl || "https://placehold.co/80x80/F9F5EC/A1887F?text=O"}
                        alt={item.ten_mon || item.name}
                        className="w-16 h-16 md:w-20 md:h-20 rounded-lg object-cover mr-4 flex-shrink-0" // K√≠ch th∆∞·ªõc l·ªõn h∆°n
                    />
                    {/* Th√¥ng tin s·∫£n ph·∫©m */}
                    <div className="flex-1 mr-4">
                        <div className="font-medium text-gray-800">{item.ten_mon || item.name}</div>
                        <div className="text-sm text-red-600 font-semibold mt-1">
                          {(Number(item.gia) || 0).toLocaleString('vi-VN')} ‚Ç´
                        </div>
                    </div>
                    {/* S·ªë l∆∞·ª£ng & X√≥a */}
                    <div className="flex flex-col items-end gap-2">
                        <input
                        type="number"
                        min="1"
                        aria-label={`S·ªë l∆∞·ª£ng ${item.ten_mon || item.name}`}
                        value={item.so_luong}
                        onChange={(e) => {
                            const newQty = parseInt(e.target.value) || 1;
                            updateQty(item.id_mon || item._id, newQty > 0 ? newQty : 1);
                        }}
                        className="w-16 border rounded text-center py-1 text-sm focus:ring-red-500 focus:border-red-500"
                        />
                        <button
                        onClick={() => removeFromCart(item.id_mon || item._id)}
                        className="text-gray-500 hover:text-red-600 text-xs font-medium transition-colors"
                        >
                        X√≥a
                        </button>
                    </div>
                    </li>
                ))}
                </ul>
            </div>

            {/* T·ªïng ti·ªÅn v√† N√∫t b·∫•m */}
            <div className="border-t pt-4">
                <div className="flex justify-between items-center mb-4">
                  <span className="text-gray-600">T·ªïng c·ªông:</span>
                  <span className="text-xl font-semibold text-red-700">
                      {total.toLocaleString("vi-VN")} ‚Ç´
                  </span>
                </div>

                <div className="flex justify-end gap-3">
                  <button onClick={onClose} className="px-4 py-2 border rounded-xl text-sm font-medium text-gray-700 hover:bg-gray-100 transition-colors">
                    Ti·∫øp t·ª•c mua
                  </button>
                  {/* S·ª≠a onClick c·ªßa n√∫t n√†y */}
                  <button
                    onClick={handleGoToCheckout} // G·ªçi h√†m chuy·ªÉn h∆∞·ªõng
                    disabled={cart.length === 0} // V√¥ hi·ªáu h√≥a n·∫øu gi·ªè tr·ªëng
                    className="px-6 py-2 bg-red-700 text-white rounded-xl hover:bg-red-800 transition-colors font-semibold text-sm disabled:opacity-50 disabled:cursor-not-allowed"
                  >
                    ƒê·∫øn Thanh to√°n
                  </button>
                </div>
            </div>
          </>
        )}
      </div>
    </div>
  );
}


// ================================
// ‚òï Coffee Shop FE - Error Debug Component
// ================================
import { useState } from "react";

export default function ErrorDebug({ error, onRetry }) {
  const [showDetails, setShowDetails] = useState(false);

  const getErrorType = (error) => {
    if (error?.response?.status === 403) return "Quy·ªÅn truy c·∫≠p";
    if (error?.response?.status === 401) return "X√°c th·ª±c";
    if (error?.response?.status === 404) return "Kh√¥ng t√¨m th·∫•y";
    if (error?.response?.status >= 500) return "M√°y ch·ªß";
    if (!error?.response) return "M·∫°ng";
    return "Kh√¥ng x√°c ƒë·ªãnh";
  };

  const getSolution = (error) => {
    if (error?.response?.status === 403) {
      return [
        "Ki·ªÉm tra xem b·∫°n ƒë√£ ƒëƒÉng nh·∫≠p ch∆∞a",
        "Li√™n h·ªá qu·∫£n tr·ªã vi√™n ƒë·ªÉ ƒë∆∞·ª£c c·∫•p quy·ªÅn",
        "Th·ª≠ ƒëƒÉng xu·∫•t v√† ƒëƒÉng nh·∫≠p l·∫°i"
      ];
    }
    if (error?.response?.status === 401) {
      return [
        "ƒêƒÉng nh·∫≠p l·∫°i v·ªõi t√†i kho·∫£n h·ª£p l·ªá",
        "Ki·ªÉm tra t√™n ƒëƒÉng nh·∫≠p v√† m·∫≠t kh·∫©u",
        "Li√™n h·ªá qu·∫£n tr·ªã vi√™n n·∫øu v·∫´n g·∫∑p l·ªói"
      ];
    }
    if (error?.response?.status === 404) {
      return [
        "Ki·ªÉm tra URL c√≥ ƒë√∫ng kh√¥ng",
        "Th·ª≠ refresh trang",
        "Li√™n h·ªá qu·∫£n tr·ªã vi√™n n·∫øu v·∫´n g·∫∑p l·ªói"
      ];
    }
    if (error?.response?.status >= 500) {
      return [
        "Th·ª≠ l·∫°i sau v√†i ph√∫t",
        "Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng",
        "Li√™n h·ªá qu·∫£n tr·ªã vi√™n n·∫øu l·ªói k√©o d√†i"
      ];
    }
    if (!error?.response) {
      return [
        "Ki·ªÉm tra k·∫øt n·ªëi internet",
        "Ki·ªÉm tra m√°y ch·ªß c√≥ ho·∫°t ƒë·ªông kh√¥ng",
        "Th·ª≠ l·∫°i sau v√†i ph√∫t"
      ];
    }
    return ["Th·ª≠ l·∫°i sau v√†i ph√∫t", "Li√™n h·ªá qu·∫£n tr·ªã vi√™n"];
  };

  return (
    <div className="bg-red-50 border border-red-200 rounded-xl p-6">
      <div className="flex items-start gap-3">
        <div className="text-red-500 text-2xl">‚ö†Ô∏è</div>
        <div className="flex-1">
          <h3 className="text-lg font-semibold text-red-800 mb-2">
            L·ªói {getErrorType(error)}
          </h3>
          <p className="text-red-700 mb-4">
            {error?.message || "ƒê√£ x·∫£y ra l·ªói kh√¥ng x√°c ƒë·ªãnh"}
          </p>
          
          <div className="space-y-3">
            <h4 className="font-semibold text-red-800">C√°ch kh·∫Øc ph·ª•c:</h4>
            <ul className="list-disc list-inside space-y-1 text-red-700">
              {getSolution(error).map((solution, index) => (
                <li key={index}>{solution}</li>
              ))}
            </ul>
          </div>

          <div className="mt-4 flex gap-3">
            {onRetry && (
              <button
                onClick={onRetry}
                className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
              >
                üîÑ Th·ª≠ l·∫°i
              </button>
            )}
            <button
              onClick={() => setShowDetails(!showDetails)}
              className="bg-gray-100 hover:bg-gray-200 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors"
            >
              {showDetails ? "·∫®n" : "Hi·ªán"} chi ti·∫øt
            </button>
          </div>

          {showDetails && (
            <div className="mt-4 p-4 bg-gray-100 rounded-lg">
              <h5 className="font-semibold text-gray-800 mb-2">Chi ti·∫øt l·ªói:</h5>
              <pre className="text-xs text-gray-600 overflow-auto">
                {JSON.stringify({
                  status: error?.response?.status,
                  statusText: error?.response?.statusText,
                  data: error?.response?.data,
                  url: error?.config?.url,
                  method: error?.config?.method,
                  message: error?.message
                }, null, 2)}
              </pre>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}
